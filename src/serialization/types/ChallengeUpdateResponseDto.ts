/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as ElsiKoraApi from "../../api/index";
import * as core from "../../core";
import { ChallengeUpdateResponseDtoData } from "./ChallengeUpdateResponseDtoData";
import { ChallengeUpdateResponseDtoSolution } from "./ChallengeUpdateResponseDtoSolution";
import { ChallengeUpdateResponseDtoType } from "./ChallengeUpdateResponseDtoType";
import { ChallengeUpdateResponseClientDto } from "./ChallengeUpdateResponseClientDto";

export const ChallengeUpdateResponseDto: core.serialization.ObjectSchema<
    serializers.ChallengeUpdateResponseDto.Raw,
    ElsiKoraApi.ChallengeUpdateResponseDto
> = core.serialization.object({
    createdAt: core.serialization.date().optional(),
    data: ChallengeUpdateResponseDtoData.optional(),
    id: core.serialization.string().optional(),
    isSolved: core.serialization.boolean().optional(),
    solution: ChallengeUpdateResponseDtoSolution.optional(),
    token: core.serialization.string().optional(),
    type: ChallengeUpdateResponseDtoType.optional(),
    updatedAt: core.serialization.date().optional(),
    client: ChallengeUpdateResponseClientDto.optional(),
});

export declare namespace ChallengeUpdateResponseDto {
    export interface Raw {
        createdAt?: string | null;
        data?: ChallengeUpdateResponseDtoData.Raw | null;
        id?: string | null;
        isSolved?: boolean | null;
        solution?: ChallengeUpdateResponseDtoSolution.Raw | null;
        token?: string | null;
        type?: ChallengeUpdateResponseDtoType.Raw | null;
        updatedAt?: string | null;
        client?: ChallengeUpdateResponseClientDto.Raw | null;
    }
}
